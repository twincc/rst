{"version":3,"sources":["webpack:///./src/components/formspark/redirect-setting.tsx","webpack:///./src/config/config.ts","webpack:///./src/components/formspark/honeypot.tsx","webpack:///./src/pages/kontakt.tsx"],"names":["RedirectType","config","process","submitUrl","honeypotName","Honeypot","className","type","name","RedirectSetting","props","value","page","subtitle","action","target","Success","Error","required","id","cols","rows","to"],"mappings":"yGAGYA,E,qBCHCC,EACFC,yBADED,EAEA,CAETE,UAAWD,mCAGXE,aAAc,UCALC,EAAqB,kBAChC,2BAAOC,UAAU,aACf,2BACEC,KAAK,WACLC,KAAMP,EAAiBG,eAH3B,gB,SFLUJ,K,oBAAAA,E,gBAAAA,M,KAcL,IAAMS,EAAmC,SAACC,GAC/C,OACE,2BAAOH,KAAK,SAASC,KAAME,EAAMH,KAAMI,MAAUV,EAAL,IAAuBS,EAAME,Q,wBGZ9D,qBACb,OACE,kBAAC,IAAD,CAASC,SAAS,WAChB,uCAEA,0BAAMC,OAAQb,EAAiBE,UAAWY,OAAO,SAC/C,kBAAC,EAAD,CAAiBR,KAAMP,EAAagB,QAASJ,KAAK,wBAClD,kBAAC,EAAD,CAAiBL,KAAMP,EAAaiB,MAAOL,KAAK,2BAEhD,2BAAON,UAAU,eACf,uCACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOU,UAAQ,KAGzC,2BAAOZ,UAAU,eACf,iDACA,2BAAOC,KAAK,QAAQC,KAAK,QAAQU,UAAQ,KAG3C,2BAAOZ,UAAU,eACf,yCACA,2BAAOC,KAAK,OAAOC,KAAK,WAI1B,kBAAC,EAAD,MAEA,2BAAOF,UAAU,eACf,4CACA,8BAAUE,KAAK,UAAUW,GAAG,GAAGC,KAAM,GAAIC,KAAM,GAAIH,UAAQ,KAG7D,yBAAKZ,UAAU,kBACb,+BACE,2BAAOC,KAAK,WAAWW,UAAQ,IADjC,IACoC,oDAAyB,kBAAC,IAAD,CAAMH,OAAO,SAASO,GAAG,gBAAzB,mCAAzB,OAItC,uBAAGhB,UAAU,mBAAkB,uCAA/B,2DAEA,4BAAQC,KAAK,UAAb","file":"component---src-pages-kontakt-tsx-336a1bbb7d0c0ee3c77d.js","sourcesContent":["import React from 'react'\nimport { config } from 'src/config/config'\n\nexport enum RedirectType {\n  Success = '_redirect',\n  Error = '_error',\n}\n\ninterface Props {\n  type: RedirectType\n  page: string\n}\n\n/**\n * Configures the redirect after form submission.\n * See https://documentation.formspark.io/customization/redirection.html\n */\nexport const RedirectSetting: React.FC<Props> = (props: Props) => {\n  return (\n    <input type=\"hidden\" name={props.type} value={`${config.baseUrl}/${props.page}`}/>\n  )\n}\n","export const config = {\n  baseUrl: process.env.GATSBY_BASE_URL,\n  formspark: {\n    // See https://dashboard.formspark.io/\n    submitUrl: process.env.GATSBY_FORM_SUBMIT_URL,\n\n    // Configured in formspark settings -> Custom honeypot\n    honeypotName: 'accept',\n  },\n}\n","import React from 'react'\nimport { config } from 'src/config/config'\n\n/**\n * Is used for spam protection instead of using a captcha.\n * See https://documentation.formspark.io/setup/spam-protection.html#honeypot\n */\nexport const Honeypot: React.FC = () => (\n  <label className=\"hp-accept\">\n    <input\n      type=\"checkbox\"\n      name={config.formspark.honeypotName}\n    />\n    Akzeptiert\n  </label>\n)","import React from 'react'\nimport { Honeypot } from 'src/components/formspark/honeypot'\nimport { RedirectSetting, RedirectType } from 'src/components/formspark/redirect-setting'\nimport { Wrapper } from 'src/components/layout/wrapper'\nimport { Link } from 'src/components/link'\nimport { config } from 'src/config/config'\n\nexport default () => {\n  return (\n    <Wrapper subtitle='Kontakt'>\n      <h1>Kontakt</h1>\n\n      <form action={config.formspark.submitUrl} target=\"_self\">\n        <RedirectSetting type={RedirectType.Success} page='kontakt-erfolgreich'/>\n        <RedirectSetting type={RedirectType.Error} page='kontakt-fehlgeschlagen'/>\n\n        <label className=\"input-group\">\n          <span>Name*</span>\n          <input type=\"text\" name=\"name\" required/>\n        </label>\n\n        <label className=\"input-group\">\n          <span>E-Mail Adresse*</span>\n          <input type=\"email\" name=\"email\" required/>\n        </label>\n\n        <label className=\"input-group\">\n          <span>Telefon</span>\n          <input type=\"text\" name=\"phone\"/>\n        </label>\n\n        {/* place honeypot in the middle of the form to make it hard for bots to detect it */}\n        <Honeypot/>\n\n        <label className=\"input-group\">\n          <span>Nachricht*</span>\n          <textarea name=\"message\" id=\"\" cols={30} rows={10} required/>\n        </label>\n\n        <div className=\"input-group-cb\">\n          <label>\n            <input type=\"checkbox\" required/> <span>Ich akzeptiere die <Link target=\"_blank\" to=\"/datenschutz\">allgemeine Datenschutzerkl√§rung</Link>*</span>\n          </label>\n        </div>\n\n        <p className=\"font-extralight\"><b>Hinweis:</b> Felder, die mit * bezeichnet sind, sind Pflichtfelder.</p>\n\n        <button type=\"submit\">Anfrage senden</button>\n      </form>\n    </Wrapper>\n  )\n}\n"],"sourceRoot":""}